@model SignUpViewModel

<h2>Sign Up</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form method="post">
    <div class="form-group">
        <label for="Username">Username</label>
        <input type="text" id="Username" name="Username" class="form-control" value="@Model.Username" required />
        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Password">Password</label>
        <input type="password" id="Password" name="Password" class="form-control" required />
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">Confirm Password</label>
        <input type="password" id="ConfirmPassword" name="ConfirmPassword" class="form-control" required />
        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Sign Up</button>
</form>
